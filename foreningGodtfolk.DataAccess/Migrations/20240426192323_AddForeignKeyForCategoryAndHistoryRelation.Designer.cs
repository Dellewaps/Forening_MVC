// <auto-generated />
using System;
using ForeningGodtfolk.DataAcess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ForeningGodtfolk.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240426192323_AddForeignKeyForCategoryAndHistoryRelation")]
    partial class AddForeignKeyForCategoryAndHistoryRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ForeningGodtfolk.Models.Calender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Calender");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Date = new DateOnly(2024, 5, 8),
                            Description = "Markedet hvor der vises håndværk fra gammle tider og sælges ting",
                            Title = "Tylstrup Middelalder Marked"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Date = new DateOnly(2024, 6, 27),
                            Description = "Vikinge markede Lindholm Høje. Marked med levende vikinger og salgsboder.",
                            Title = "Lindholm Marked"
                        });
                });

            modelBuilder.Entity("ForeningGodtfolk.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Event"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Klubdag"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Kursus"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "Nørkledag"
                        });
                });

            modelBuilder.Entity("ForeningGodtfolk.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Historys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Date = new DateOnly(2024, 5, 8),
                            Description = "Markedet hvor der vises håndværk fra gammle tider og sælges ting",
                            Title = "Tylstrup Middelalder Marked"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Date = new DateOnly(2024, 6, 27),
                            Description = "Vikinge markede Lindholm Høje. Marked med levende vikinger og salgsboder.",
                            Title = "Lindholm Marked"
                        });
                });

            modelBuilder.Entity("ForeningGodtfolk.Models.Calender", b =>
                {
                    b.HasOne("ForeningGodtfolk.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ForeningGodtfolk.Models.History", b =>
                {
                    b.HasOne("ForeningGodtfolk.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
